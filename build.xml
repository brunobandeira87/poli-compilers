<?xml version="1.0"?>

<project name="compilers" xmlns:antelope="antlib:ise.antelope.tasks" xmlns:jacoco="antlib:org.jacoco.ant">
	<property name="project.dir" value="." />
	<property environment="env" />

	<!-- configuration file -->

	<property file="${project.dir}/build.properties" />

	<path id="lib.classpath">
		<fileset dir="${project.dir}/lib" includes="*.jar" />
	</path>

	<path id="project.classpath">
		<path refid="lib.classpath" />
		<pathelement path="${project.dir}/classes" />
	</path>

	<taskdef classpathref="lib.classpath" resource="net/sf/antcontrib/antlib.xml" />
	<taskdef classpathref="lib.classpath" resource="org/jacoco/ant/antlib.xml" uri="antlib:org.jacoco.ant" />

	<target name="clean">
		<delete dir="${project.dir}/classes" />
		<delete dir="${project.dir}/test-classes" />
	</target>

	<target name="compile" depends="clean">
		<mkdir dir="${project.dir}/classes" />

		<javac
			classpathref="project.classpath"
			compiler="${javac.compiler}"
			debug="${javac.debug}"
			deprecation="${javac.deprecation}"
			destdir="${project.dir}/classes"
			includeAntRuntime="false"
			nowarn="${javac.nowarn}"
			srcdir="${project.dir}/src"
		/>
	</target>

	<target name="compile-test" depends="compile">
		<mkdir dir="${project.dir}/test-classes" />

		<javac
			classpathref="project.classpath"
			compiler="${javac.compiler}"
			debug="${javac.debug}"
			deprecation="${javac.deprecation}"
			destdir="${project.dir}/test-classes"
			includeAntRuntime="false"
			nowarn="${javac.nowarn}"
			srcdir="${project.dir}/test"
		/>
	</target>

	<target name="test-code" depends="compile-test">
		<trycatch>
			<try>
				<jacoco:coverage destfile="jacoco.coverage">
					<junit fork="true" printsummary="yes" haltonfailure="yes">
						<classpath>
							<path refid="project.classpath" />
							<pathelement location="${project.dir}/test-classes" />
						</classpath>

						<batchtest>
							<formatter type="plain" usefile="false" />

							<fileset dir="${project.dir}/test-classes">
								<include name="**/*Test.class" />
							</fileset>
						</batchtest>
					</junit>
				</jacoco:coverage>
			</try>
			<finally>
				<jacoco:report>
					<executiondata>
						<file file="${project.dir}/jacoco.coverage" />
					</executiondata>

					<structure name="source">
						<classfiles>
							<fileset dir="${project.dir}/classes" />
						</classfiles>
						<sourcefiles encoding="UTF-8">
							<fileset dir="${project.dir}/src" />
						</sourcefiles>
					</structure>

					<html destdir="${project.dir}/coverage" />

					<check>
						<rule element="PACKAGE">
							<limit counter="LINE" value="COVEREDRATIO" minimum="0.80" />
							<limit counter="CLASS" value="MISSEDCOUNT" maximum="0" />
						</rule>
					</check>
				</jacoco:report>

				<delete file="${project.dir}/jacoco.coverage" />
			</finally>
		</trycatch>
	</target>

	<target name="test-grammar">
		<mkdir dir="${project.dir}/_antlr" />

		<trycatch>
			<try>
				<java
					classpathref="project.classpath"
					failonerror="true"
					fork="true"
					jar="${project.dir}/lib/antlr-4.4-complete.jar"
					maxmemory="256m"
					newenvironment="true"
				>
					<arg value="-o" />
					<arg value="${project.dir}/_antlr" />
					<arg value="${project.dir}/${grammar.file}" />
				</java>
			</try>
			<finally>
				<delete dir="${project.dir}/_antlr" />
			</finally>
		</trycatch>
	</target>

	<target name="test" depends="test-grammar,test-code" />
</project>